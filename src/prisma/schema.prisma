// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  name      String
  phone     String   @unique
  email     String?  @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contacts  Contact[]
  spam      SpamReport[]
}

model Contact {
  id         String   @id @default(uuid())
  name       String
  phone      String
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([phone])
}


// model SpamReport {
//   id         String   @id @default(uuid())
//   phone      String
//   userId     String
//   user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
//   createdAt  DateTime @default(now())

//   @@unique([phone, userId]) // one user can only report a number once
// }



model SpamReport {
  id         String   @id @default(uuid())
  phone      String
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())

  @@unique([phone, userId]) // one user can only report a number once
}

